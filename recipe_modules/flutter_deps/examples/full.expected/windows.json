[
  {
    "cmd": [],
    "name": "OpenJDK dependency"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\java",
      "-ensure-file",
      "flutter_internal/java/openjdk/${platform} v1",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "OpenJDK dependency.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v1--------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/java/openjdk/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Download goldctl"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\gold",
      "-ensure-file",
      "skia/tools/goldctl/${platform} v2",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Download goldctl.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v2--------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"skia/tools/goldctl/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Chrome and driver dependency"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\chrome\\chrome",
      "-ensure-file",
      "flutter_internal/browsers/chrome/${platform} v3",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Chrome and driver dependency.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v3--------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/browsers/chrome/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\chrome\\drivers",
      "-ensure-file",
      "flutter_internal/browser-drivers/chrome/${platform} v3",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Chrome and driver dependency.ensure_installed (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v3--------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/browser-drivers/chrome/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\go",
      "-ensure-file",
      "infra/go/${platform} v4",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v4--------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/go/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "vpython",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[CLEANUP]\\go_path"
    ],
    "infra_step": true,
    "name": "Ensure go path"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\go",
      "-ensure-file",
      "infra/go/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed (2)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/go/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "vpython",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[CLEANUP]\\go_path"
    ],
    "infra_step": true,
    "name": "Ensure go path (2)"
  },
  {
    "cmd": [
      "go",
      "get",
      "-u",
      "github.com/technosophos/dashing"
    ],
    "env": {
      "CHROME_EXECUTABLE": "[CACHE]\\chrome\\chrome\\chrome.exe",
      "CHROME_NO_SANDBOX": "true",
      "GOPATH": "[CLEANUP]\\go_path"
    },
    "env_prefixes": {
      "PATH": [
        "[CACHE]\\chrome\\chrome",
        "[CACHE]\\chrome\\drivers",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin"
      ]
    },
    "infra_step": true,
    "name": "Install dashing"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CLEANUP]\\tmp_tmp_1\\vpython",
      "-ensure-file",
      "infra/tools/luci/vpython/${platform} v6",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed (3)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v6--------------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/tools/luci/vpython/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "download Android SDK components"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\android\\tools",
      "-ensure-file",
      "flutter/android/sdk/tools/${platform} version:26.1.1",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "download Android SDK components.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:26.1.1--\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/android/sdk/tools/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\android\\platform-tools",
      "-ensure-file",
      "flutter/android/sdk/platform-tools/${platform} version:29.0.2",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "download Android SDK components.ensure_installed (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:29.0.2--\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/android/sdk/platform-tools/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\android\\platforms",
      "-ensure-file",
      "flutter/android/sdk/platforms version:29r1",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "download Android SDK components.ensure_installed (3)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:29r1----\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/android/sdk/platforms\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\android\\build-tools",
      "-ensure-file",
      "flutter/android/sdk/build-tools/${platform} version:29.0.1",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "download Android SDK components.ensure_installed (4)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:29.0.1--\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/android/sdk/build-tools/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\android\\ndk-bundle",
      "-ensure-file",
      "flutter/android/ndk/${platform} version:21.3.6528147",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "download Android SDK components.ensure_installed (5)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:21.3.652\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/android/ndk/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\android\\licenses",
      "-ensure-file",
      "flutter_internal/android/sdk/licenses latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "download Android SDK components.ensure_installed (6)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/android/sdk/licenses\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "vpython",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[START_DIR]\\firebase"
    ],
    "infra_step": true,
    "name": "ensure directory"
  },
  {
    "cmd": [],
    "name": "Install firebase"
  },
  {
    "cmd": [
      "curl",
      "-Lo",
      "[START_DIR]\\firebase\\firebase",
      "https://firebase.tools/bin/linux/latest"
    ],
    "infra_step": true,
    "name": "Install firebase.Install firebase bin",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "chmod",
      "755",
      "[START_DIR]\\firebase\\firebase"
    ],
    "infra_step": true,
    "name": "Install firebase.Set execute permission",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install cmake"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\cmake",
      "-ensure-file",
      "infra/cmake/${platform} version:3.16.1",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install cmake.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:3.16.1--\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/cmake/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install ninja"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\ninja",
      "-ensure-file",
      "infra/ninja/${platform} version:1.9.0",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install ninja.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:1.9.0---\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/ninja/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install clang"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\clang",
      "-ensure-file",
      "fuchsia/third_party/clang/${platform} git_revision:7e9747b50bcb1be28d4a3236571e8050835497a6",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install clang.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-git_revision:7e9\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"fuchsia/third_party/clang/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Prepare code signing"
  },
  {
    "cmd": [
      "unlock_login_keychain.sh"
    ],
    "infra_step": true,
    "name": "Prepare code signing.unlock login keychain",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CLEANUP]\\tmp_tmp_2\\curl",
      "-ensure-file",
      "flutter_internal/tools/curl/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed (4)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/tools/curl/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Checkout cocoon"
  },
  {
    "cmd": [],
    "name": "Checkout cocoon.Checkout flutter/cocoon",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[depot_tools::git]\\resources\\git_setup.py",
      "--path",
      "[CACHE]\\cocoon",
      "--url",
      "https://chromium.googlesource.com/external/github.com/flutter/cocoon"
    ],
    "name": "Checkout cocoon.Checkout flutter/cocoon.git setup",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "fetch",
      "origin",
      "master",
      "--recurse-submodules",
      "--progress",
      "--tags"
    ],
    "cwd": "[CACHE]\\cocoon",
    "env": {
      "PATH": "RECIPE_REPO[depot_tools];<PATH>"
    },
    "infra_step": true,
    "name": "Checkout cocoon.Checkout flutter/cocoon.git fetch",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "checkout",
      "-f",
      "FETCH_HEAD"
    ],
    "cwd": "[CACHE]\\cocoon",
    "infra_step": true,
    "name": "Checkout cocoon.Checkout flutter/cocoon.git checkout",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "rev-parse",
      "HEAD"
    ],
    "cwd": "[CACHE]\\cocoon",
    "infra_step": true,
    "name": "Checkout cocoon.Checkout flutter/cocoon.read revision",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_TEXT@<br/>checked out 'deadbeef'<br/>@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@\"deadbeef\"@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "clean",
      "-f",
      "-d",
      "-x"
    ],
    "cwd": "[CACHE]\\cocoon",
    "infra_step": true,
    "name": "Checkout cocoon.Checkout flutter/cocoon.git clean",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "submodule",
      "sync"
    ],
    "cwd": "[CACHE]\\cocoon",
    "infra_step": true,
    "name": "Checkout cocoon.Checkout flutter/cocoon.submodule sync",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "submodule",
      "update",
      "--init",
      "--recursive"
    ],
    "cwd": "[CACHE]\\cocoon",
    "infra_step": true,
    "name": "Checkout cocoon.Checkout flutter/cocoon.submodule update",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install dart sdk"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\dart_sdk",
      "-ensure-file",
      "dart/dart-sdk/${platform} stable",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install dart sdk.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-stable----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"dart/dart-sdk/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install certs"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\certs",
      "-ensure-file",
      "flutter_internal/certs latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install certs.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/certs\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "powershell.exe",
      "[CACHE]\\certs\\install.ps1"
    ],
    "cwd": "[CACHE]\\certs",
    "env": {
      "ANDROID_HOME": "[CACHE]\\android",
      "ANDROID_SDK_ROOT": "[CACHE]\\android",
      "CHROME_EXECUTABLE": "[CACHE]\\chrome\\chrome\\chrome.exe",
      "CHROME_NO_SANDBOX": "true",
      "COCOON_PATH": "[CACHE]\\cocoon",
      "FLUTTER_XCODE_CODE_SIGN_STYLE": "Manual",
      "FLUTTER_XCODE_DEVELOPMENT_TEAM": "S8QB4VV633",
      "FLUTTER_XCODE_PROVISIONING_PROFILE_SPECIFIER": "match Development *",
      "GOPATH": "[CLEANUP]\\go_path",
      "GRADLE_OPTS": "-Dorg.gradle.daemon=false",
      "GRADLE_USER_HOME": "[CACHE]\\gradle"
    },
    "env_prefixes": {
      "PATH": [
        "[CACHE]\\certs",
        "[CACHE]\\dart_sdk",
        "[CACHE]\\chrome\\chrome",
        "[CACHE]\\chrome\\drivers",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin",
        "[CLEANUP]\\tmp_tmp_1\\vpython",
        "[CACHE]\\android\\platform-tools",
        "[CACHE]\\android\\tools",
        "[START_DIR]\\firebase",
        "[CACHE]\\cmake\\bin",
        "[CACHE]\\ninja",
        "[CACHE]\\clang\\bin",
        "[CLEANUP]\\tmp_tmp_2\\curl"
      ]
    },
    "name": "Install Certs"
  },
  {
    "cmd": [
      "powershell.exe",
      "New-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem\" -Name \"LongPathsEnabled\" -Value 1 -PropertyType DWORD -Force"
    ],
    "env": {
      "ANDROID_HOME": "[CACHE]\\android",
      "ANDROID_SDK_ROOT": "[CACHE]\\android",
      "CHROME_EXECUTABLE": "[CACHE]\\chrome\\chrome\\chrome.exe",
      "CHROME_NO_SANDBOX": "true",
      "COCOON_PATH": "[CACHE]\\cocoon",
      "FLUTTER_XCODE_CODE_SIGN_STYLE": "Manual",
      "FLUTTER_XCODE_DEVELOPMENT_TEAM": "S8QB4VV633",
      "FLUTTER_XCODE_PROVISIONING_PROFILE_SPECIFIER": "match Development *",
      "GOPATH": "[CLEANUP]\\go_path",
      "GRADLE_OPTS": "-Dorg.gradle.daemon=false",
      "GRADLE_USER_HOME": "[CACHE]\\gradle"
    },
    "env_prefixes": {
      "PATH": [
        "[CACHE]\\certs",
        "[CACHE]\\dart_sdk",
        "[CACHE]\\chrome\\chrome",
        "[CACHE]\\chrome\\drivers",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin",
        "[CLEANUP]\\tmp_tmp_1\\vpython",
        "[CACHE]\\android\\platform-tools",
        "[CACHE]\\android\\tools",
        "[START_DIR]\\firebase",
        "[CACHE]\\cmake\\bin",
        "[CACHE]\\ninja",
        "[CACHE]\\clang\\bin",
        "[CLEANUP]\\tmp_tmp_2\\curl"
      ]
    },
    "name": "Enable long path support"
  },
  {
    "name": "$result"
  }
]